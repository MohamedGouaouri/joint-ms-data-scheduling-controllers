//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNetworkDef) DeepCopyInto(out *EdgeNetworkDef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNetworkDef.
func (in *EdgeNetworkDef) DeepCopy() *EdgeNetworkDef {
	if in == nil {
		return nil
	}
	out := new(EdgeNetworkDef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNetworkTopology) DeepCopyInto(out *EdgeNetworkTopology) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNetworkTopology.
func (in *EdgeNetworkTopology) DeepCopy() *EdgeNetworkTopology {
	if in == nil {
		return nil
	}
	out := new(EdgeNetworkTopology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EdgeNetworkTopology) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNetworkTopologyList) DeepCopyInto(out *EdgeNetworkTopologyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EdgeNetworkTopology, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNetworkTopologyList.
func (in *EdgeNetworkTopologyList) DeepCopy() *EdgeNetworkTopologyList {
	if in == nil {
		return nil
	}
	out := new(EdgeNetworkTopologyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EdgeNetworkTopologyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNetworkTopologySpec) DeepCopyInto(out *EdgeNetworkTopologySpec) {
	*out = *in
	if in.Edges != nil {
		in, out := &in.Edges, &out.Edges
		*out = make([]EdgeNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNetworkTopologySpec.
func (in *EdgeNetworkTopologySpec) DeepCopy() *EdgeNetworkTopologySpec {
	if in == nil {
		return nil
	}
	out := new(EdgeNetworkTopologySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNetworkTopologyStatus) DeepCopyInto(out *EdgeNetworkTopologyStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNetworkTopologyStatus.
func (in *EdgeNetworkTopologyStatus) DeepCopy() *EdgeNetworkTopologyStatus {
	if in == nil {
		return nil
	}
	out := new(EdgeNetworkTopologyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNode) DeepCopyInto(out *EdgeNode) {
	*out = *in
	if in.Links != nil {
		in, out := &in.Links, &out.Links
		*out = make([]EdgeNodeLink, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNode.
func (in *EdgeNode) DeepCopy() *EdgeNode {
	if in == nil {
		return nil
	}
	out := new(EdgeNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNodeLink) DeepCopyInto(out *EdgeNodeLink) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNodeLink.
func (in *EdgeNodeLink) DeepCopy() *EdgeNodeLink {
	if in == nil {
		return nil
	}
	out := new(EdgeNodeLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Microservice) DeepCopyInto(out *Microservice) {
	*out = *in
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]MicroserviceDependency, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Microservice.
func (in *Microservice) DeepCopy() *Microservice {
	if in == nil {
		return nil
	}
	out := new(Microservice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicroserviceApplication) DeepCopyInto(out *MicroserviceApplication) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicroserviceApplication.
func (in *MicroserviceApplication) DeepCopy() *MicroserviceApplication {
	if in == nil {
		return nil
	}
	out := new(MicroserviceApplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MicroserviceApplication) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicroserviceApplicationList) DeepCopyInto(out *MicroserviceApplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MicroserviceApplication, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicroserviceApplicationList.
func (in *MicroserviceApplicationList) DeepCopy() *MicroserviceApplicationList {
	if in == nil {
		return nil
	}
	out := new(MicroserviceApplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MicroserviceApplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicroserviceApplicationSpec) DeepCopyInto(out *MicroserviceApplicationSpec) {
	*out = *in
	out.EdgeNetwork = in.EdgeNetwork
	if in.Microservices != nil {
		in, out := &in.Microservices, &out.Microservices
		*out = make([]Microservice, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicroserviceApplicationSpec.
func (in *MicroserviceApplicationSpec) DeepCopy() *MicroserviceApplicationSpec {
	if in == nil {
		return nil
	}
	out := new(MicroserviceApplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicroserviceApplicationStatus) DeepCopyInto(out *MicroserviceApplicationStatus) {
	*out = *in
	if in.Ranks != nil {
		in, out := &in.Ranks, &out.Ranks
		*out = make(map[string]int, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicroserviceApplicationStatus.
func (in *MicroserviceApplicationStatus) DeepCopy() *MicroserviceApplicationStatus {
	if in == nil {
		return nil
	}
	out := new(MicroserviceApplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicroserviceDependency) DeepCopyInto(out *MicroserviceDependency) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicroserviceDependency.
func (in *MicroserviceDependency) DeepCopy() *MicroserviceDependency {
	if in == nil {
		return nil
	}
	out := new(MicroserviceDependency)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Neighbour) DeepCopyInto(out *Neighbour) {
	*out = *in
	in.Microservice.DeepCopyInto(&out.Microservice)
	out.Dependency = in.Dependency
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Neighbour.
func (in *Neighbour) DeepCopy() *Neighbour {
	if in == nil {
		return nil
	}
	out := new(Neighbour)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAllocation) DeepCopyInto(out *VolumeAllocation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAllocation.
func (in *VolumeAllocation) DeepCopy() *VolumeAllocation {
	if in == nil {
		return nil
	}
	out := new(VolumeAllocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeAllocation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAllocationList) DeepCopyInto(out *VolumeAllocationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeAllocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAllocationList.
func (in *VolumeAllocationList) DeepCopy() *VolumeAllocationList {
	if in == nil {
		return nil
	}
	out := new(VolumeAllocationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeAllocationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAllocationSpec) DeepCopyInto(out *VolumeAllocationSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAllocationSpec.
func (in *VolumeAllocationSpec) DeepCopy() *VolumeAllocationSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeAllocationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAllocationStatus) DeepCopyInto(out *VolumeAllocationStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAllocationStatus.
func (in *VolumeAllocationStatus) DeepCopy() *VolumeAllocationStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeAllocationStatus)
	in.DeepCopyInto(out)
	return out
}
